// <auto-generated />
using System;
using Ijora.Storage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ijora.RestAPI.Migrations
{
    [DbContext(typeof(IjoraServiceContext))]
    [Migration("20250126164110_NullableUserName")]
    partial class NullableUserName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Ijora.Storage.Entity.AuthEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("AccessToken")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("AccessTokenExpieredAt")
                        .HasColumnType("DATETIME");

                    b.Property<string>("OTP")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("OTPExpieredAt")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("RefreshTokenExpieredAt")
                        .HasColumnType("DATETIME");

                    b.Property<short>("RetryCount")
                        .HasColumnType("smallint");

                    b.Property<string>("UserJson")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("AccessToken", "Phone");

                    b.ToTable("Auth", (string)null);
                });

            modelBuilder.Entity("Ijora.Storage.Entity.ComplexEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("BuildYear")
                        .HasColumnType("int");

                    b.Property<int?>("CompletionYear")
                        .HasColumnType("int");

                    b.Property<string>("ConstructionStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Developer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ImageUrls")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<long>("PublisherUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Id", "Address", "CreatedAt");

                    b.ToTable("Complexes", (string)null);
                });

            modelBuilder.Entity("Ijora.Storage.Entity.RealEstateEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AllowsChildren")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("AllowsPets")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("BathroomCount")
                        .HasColumnType("int");

                    b.Property<int>("CargoElevatorCount")
                        .HasColumnType("int");

                    b.Property<double?>("CeilingHeight")
                        .HasColumnType("double");

                    b.Property<long?>("ComplexId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Floor")
                        .HasColumnType("int");

                    b.Property<bool>("HasBalcony")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasElevator")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasParking")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("HeatingType")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ImageUrls")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAvaliable")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsFurnished")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsInGatedCommunity")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("KitchenArea")
                        .HasColumnType("double");

                    b.Property<double?>("LivingArea")
                        .HasColumnType("double");

                    b.Property<int>("OwnerCount")
                        .HasColumnType("int");

                    b.Property<string>("OwnershipType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("OwnershipYears")
                        .HasColumnType("int");

                    b.Property<double?>("Price")
                        .HasColumnType("double");

                    b.Property<string>("PropertyCondition")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PropertyType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PropertyUsageType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PublisherPhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Renovation")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("RoomCount")
                        .HasColumnType("int");

                    b.Property<double?>("SquareMeters")
                        .HasColumnType("double");

                    b.Property<int?>("TotalFloors")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("WallMaterial")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("WindowView")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("YearBuilt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id", "Address");

                    b.ToTable("RealEstates", (string)null);
                });

            modelBuilder.Entity("Ijora.Storage.Entity.UserEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("LastAuthDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("RegistrationDateTime")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(59)
                        .HasColumnType("varchar(59)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("UserName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
